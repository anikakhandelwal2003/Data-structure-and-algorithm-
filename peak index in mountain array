// You are given an integer mountain array arr of length n where the values increase to a peak element and then decrease.

// Return the index of the peak element.

// Your task is to solve it in O(log(n)) time complexity.
// Input: arr = [0,1,0]

// Output: 1
 
 
 
 
 int peakIndexInMountainArray(vector<int>& arr) {
        if(arr.size()==1)
        {
            return 0;
        }
        for(int i=1; i<arr.size()-1;i++)
        {
            if(arr[i-1]<arr[i] && arr[i]>arr[i+1])
            {
                return i;
            }
        }
        if(arr[arr.size()-1]>arr[arr.size()-1])
        {
            return arr.size()-1;
        }
        return -1;
    }